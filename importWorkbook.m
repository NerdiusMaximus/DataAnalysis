function [ForceN,SPDisplacementmm,Rotationdeg,sheetName] = importfile(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE Import data from a spreadsheet
%   IMPORTFILE(FILE) reads data from the first worksheet in the Microsoft
%   Excel spreadsheet file named FILE and returns the data as column
%   vectors.
%
%   IMPORTFILE(FILE,SHEET) reads from the specified worksheet.
%
%   IMPORTFILE(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.
%
%	Rows with non-numeric cells are excluded.
%
% Example:
%   importfile('Left 78K - Cartilage and Meniscus - 06.26.2015.xls','15 Deg
%   1000N',1,705);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2015/12/04 14:10:47

%% Input handling

% % If no sheet is specified, read first sheet
% if nargin == 1 || isempty(sheetName)
%     sheetName = 1;
% end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 1;
    endRow = 5500;
end

[~, sheetName] = xlsfinfo(workbookFile);


%% Import the data
for i = 1:length(sheetName)
    
[~,~,raw1] = xlsread(workbookFile,sheetName{i},sprintf('F%d:F%d',startRow(1),endRow(1)));
[~,~,raw2] = xlsread(workbookFile,sheetName{i},sprintf('K%d:K%d',startRow(1),endRow(1)));
[~,~,raw3] = xlsread(workbookFile,sheetName{i},sprintf('L%d:L%d',startRow(1),endRow(1)));


raw = [raw1,raw2,raw3];

% start at row that is not variable names
for block=2:length(startRow)
    [~, ~, tmpRawBlock1] = xlsread(workbookFile, sheetName{i}, sprintf('F%d:F%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock2] = xlsread(workbookFile, sheetName{i}, sprintf('K%d:K%d',startRow(block),endRow(block)));
    [~, ~, tmpRawBlock3] = xlsread(workbookFile, sheetName{i}, sprintf('L%d:L%d',startRow(block),endRow(block)));
    raw = [raw;tmpRawBlock1,tmpRawBlock2,tmpRawBlock3]; %#ok<AGROW>
end

%% Exclude rows with non-numeric cells
I = ~all(cellfun(@(x) (isnumeric(x) || islogical(x)) && ~isnan(x),raw),2); % Find rows with non-numeric cells
raw(I,:) = [];

%% Create output variable
J = cellfun(@(x) ischar(x), raw);
raw(J) = {NaN};
data = reshape([raw{:}],size(raw));

disp('i = ');
disp(i);
%% Allocate imported array to column variable names

for j = 1:length(data(:,1))
    ForceN(j,i) = data(j,1);
    SPDisplacementmm(j,i) = data(j,2);
    Rotationdeg(j,i) = data(j,3);
end

end
